{"version":3,"file":"league.js","sourceRoot":"/src/","sources":["controllers/league.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Request,\n  Response,\n} from 'express';\nimport {\n  League as LeagueModel,\n} from '../models';\n\nimport fixtures from '../results.json';\n\nexport const addLeague = async (\n  req: Request,\n  res: Response,\n) => {\n  try {\n    const data = await LeagueModel.create({\n      ...req.body,\n    })\n    res\n      .status(201)\n      .send({\n        message: \"You have successfully created a league\",\n        data,\n      })\n  } catch (error) {\n    res\n      .status(422)\n      .send({\n        message: \"Failure to create league\",\n        error,\n      })\n  }\n}\n\nexport const viewLeagues = async (\n  _: Request,\n  res: Response,\n) => {\n  try {\n    const data = await LeagueModel.find()\n    res\n      .status(200)\n      .send({\n        message: \"Successfully fetched the collection of leagues\",\n        data,\n      })\n  } catch (error) {\n    res\n      .status(500)\n      .send({\n        message: \"Something went wrong collecting the collection of leagues\",\n        error,\n      })\n  }\n}\n\nexport const viewSpecificLeague = async (\n  req: Request,\n  res: Response,\n) => {\n  try {\n    const data = await LeagueModel.findById(req.params.leagueID);\n    res\n    .status(200)\n    .send({\n      message: `Returned ${data?.name}`,\n      data,\n    })\n  } catch (error) {\n    res\n    .status(500)\n    .send({\n      message: \"Something went wrong collecting the collection of leagues\",\n      error,\n    })\n  }\n}\n\nexport const viewCustomLeagueData = (\n  _: Request,\n  res: Response\n) => {\n  if(typeof fixtures !== 'object'){\n    res.status(422).send({\n      message: 'Incorrect format',\n      error: 'Incorrect formatting',\n    });\n  };\n  const teams: Record<string, number> = {};\n  (fixtures ?? []).forEach(fixture => {\n    if(!teams[fixture.homeTeam]){\n      teams[fixture.homeTeam] = 0;\n    }\n    if(!teams[fixture.awayTeam]){\n      teams[fixture.awayTeam] = 0;\n    }\n    if(fixture.homeScore > fixture.awayScore){\n      teams[fixture.homeTeam] += 3;\n      teams[fixture.awayTeam] += 0;\n    }\n    if(fixture.homeScore < fixture.awayScore){\n      teams[fixture.awayTeam] += 3;\n      teams[fixture.homeTeam] += 0;\n    }\n    if(fixture.homeScore === fixture.awayScore){\n      teams[fixture.awayTeam] += 1\n      teams[fixture.homeTeam] += 1\n    }\n  })\n  const teamList = Object.keys(teams);\n  const pointsList = Object.values(teams);\n  const leagueTable: Array<Record<any,any>> = [];\n  teamList.forEach((team, index) => {\n    leagueTable.push({\n      team,\n      points: pointsList[index]\n    })\n  })\n\n  leagueTable.sort((a, b) => {\n    if(a.points > b.points) return -1;\n    if(a.points < b.points) return 1;\n    if(a.points === b.points){\n       if(a.team > b.team) return 1;\n       if(a.team < b.team) return -1;\n    }\n    return 1;\n  });\n  res.status(200).send({\n    message: 'Success',\n    data: leagueTable\n  })\n}"]}