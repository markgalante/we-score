{"version":3,"file":"match.js","sourceRoot":"/src/","sources":["controllers/match.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  Request,\n  Response,\n} from 'express';\nimport type {\n  Document,\n  Types,\n} from 'mongoose';\n\nimport {\n  League as LeagueModel,\n  Match as MatchModel,\n  Team as TeamModel,\n} from '../models'\n\nimport * as ModelTypes from '../types';\n\ntype MatchDataType = \n  Document<\n    unknown, any, ModelTypes.MatchSchema> & ModelTypes.MatchSchema & {\n    _id: Types.ObjectId;\n  }\n\ntype TeamDataType = \n  (\n    Document<\n      unknown,\n      any,\n      ModelTypes.TeamSchema\n    > & ModelTypes.TeamSchema & Required<{\n      _id: Types.ObjectId;\n    }>\n  ) | null\n\ntype LeagueDataType = (\n  Document<\n    unknown,\n    any,\n    ModelTypes.LeagueSchema\n  > & ModelTypes.LeagueSchema & Required<{\n    _id: Types.ObjectId;\n  }>\n) | null\n\nexport const registerMatch = async (\n  req: Request,\n  res: Response,\n) => {\n  //Create Match with scores\n  const homeTeam = await TeamModel.findById(req.body.homeTeam);\n  const awayTeam = await TeamModel.findById(req.body.awayTeam);\n  const league = await LeagueModel.findById(req.body.league);\n  try {\n    const match = await MatchModel.create({\n      ...req.body,\n      homeTeam,\n      awayTeam,\n      league,\n    });\n    await addMatchToLeague(req, res, match);\n    await updateTeams(req, homeTeam, awayTeam, league);\n    res\n    .status(201)\n    .send({\n      message: \"You have successfully registered a match\",\n      data: match,\n    })\n  } catch (error) {\n    res\n    .status(422)\n    .send({\n      message: \"Failure to register match\",\n      error,\n    })\n  }\n}\n\nconst addMatchToLeague = async (\n  req: Request,\n  res: Response,\n  data: MatchDataType,\n) => {\n  try {\n    await LeagueModel\n    .updateOne({\n      _id: req.body.league\n    }, {\n      $push: {\n        matches: data\n      }\n    });\n  } catch (error) {\n    res\n    .status(422)\n    .send({\n      message: \"Failure to add match to the league\",\n      error,\n    })\n  }\n}\n\nconst updateTeams = async (\n  req: Request,\n  homeTeam: TeamDataType,\n  awayTeam: TeamDataType,\n  league: LeagueDataType,\n) => {\n  try {\n    const {\n      pointsDraw,\n      pointsLoss,\n      pointsWin,\n    } = league!;\n  \n    const {homeScore, awayScore} = req.body;\n    if (homeScore > awayScore) {\n      await updateTeamsStandings(\n        homeTeam, awayTeam, homeScore, awayScore, pointsWin, pointsLoss\n      );\n    }\n    if (homeScore < awayScore) {\n      await updateTeamsStandings(\n        homeTeam, awayTeam, homeScore, awayScore, pointsLoss, pointsWin,\n      )\n    }\n    if (homeScore === awayScore) {\n      await updateTeamsStandings(\n        homeTeam, awayTeam, homeScore, awayScore, pointsDraw, pointsDraw\n      )\n    }\n    console.debug('Successfully updated team standings')\n  } catch (error) {\n    console.error('Something went wrong updating team standings!');\n  }\n};\n\nconst updateTeamsStandings = async (\n  homeTeam: TeamDataType,\n  awayTeam: TeamDataType,\n  homeScore: number,\n  awayScore: number,\n  homePoints: number,\n  awayPoints: number,\n) => {\n  if(homeTeam){\n    homeTeam.goalsFor += homeScore;\n    homeTeam.goalsAgainst += awayScore;\n    homeTeam.points += homePoints;\n    await homeTeam.save();\n  }\n  if(awayTeam){\n    awayTeam.goalsFor += awayScore;\n    awayTeam.goalsAgainst += homeScore;\n    awayTeam.points += awayPoints;\n    await awayTeam.save();\n  }\n}\n\nexport const viewMatchesInLeague = async (\n  req: Request,\n  res: Response,\n) => {\n  try {\n    const matches = await MatchModel.find({\n      league: req.params.leagueId,\n    })\n    const data = matches.map(match => ({\n      home: {\n        name: match.homeTeam.name,\n        score: match.homeScore,\n        id: match.homeTeam._id,\n      },\n      away: {\n        name: match.awayTeam.name,\n        score: match.awayScore,\n        id: match.awayTeam._id\n      }\n    }));\n    res.status(200).send({\n      message: `Successfully fetched results from league ${req.params.leagueId}`,\n      data,\n    })\n  } catch (error) {\n    res.status(500).send({\n      message: \"Failed to fetch matches from league\",\n      error,\n    })\n  }\n}"]}